[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "paypal-mcp-server"
version = "0.1.0"
description = "PayPal MCP Server for LLM function calling integration"
readme = "README.md"
authors = [
    {name = "MCP Server Team", email = "mcpserver@example.com"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Developers",
]
dependencies = [
    "pydantic>=2.0.0",
    "requests>=2.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.0.270",
]

[project.scripts]
paypal-mcp = "src.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "B", "I", "N", "UP", "SIM", "TCH"]
ignore = []
